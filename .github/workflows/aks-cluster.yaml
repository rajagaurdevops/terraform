name: Terraform AKS CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'aks/**'
      
  workflow_dispatch:   # Manual trigger support

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        working-directory: aks  # Terraform code folder

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        

# If you create a service principal in AAD:
# az ad sp create-for-rbac --name "my-terraform-sp" --role Contributor --scopes /subscriptions/<SUBSCRIPTION_ID>
# {
#   "clientId": "xxxxxx",
#   "clientSecret": "xxxxxx",
#   "subscriptionId": "xxxxxx",
#   "tenantId": "xxxxxx",
#   "activeDirectoryEndpointUrl": "https://login.microsoftonline.com",
#   "resourceManagerEndpointUrl": "https://management.azure.com/",
#   "activeDirectoryGraphResourceId": "https://graph.windows.net/",
#   "sqlManagementEndpointUrl": "https://management.core.windows.net:8443/",
#   "galleryEndpointUrl": "https://gallery.azure.com/",
#   "managementEndpointUrl": "https://management.core.windows.net/"
# }
# This JSON can be used as AZURE_CREDENTIALS secret in GitHub Actions.
