name: Terraform AKS CI/CD

on:
  push:
    branches: [main]
    paths:
      - 'aks/**'
      
  workflow_dispatch:   # Manual trigger support

jobs:
  terraform:
    runs-on: ubuntu-latest

  # Environment variables for Terraform Azure provider authentication
  # These are required for Terraform to connect and manage Azure resources
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        working-directory: aks  # Terraform code folder
        
  # Check out the repository so workflow can access Terraform code
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
    # Login to Azure CLI using service principal JSON stored in GitHub secret
    # This is needed if you want to run any Azure CLI commands in the workflow
      # - name: Login to Azure
      #   uses: azure/login@v1
      #   with:
      #     creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.7

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        

# Notes for creating service principal in Azure Active Directory:
# Use this command to create a service principal for Terraform:
# az ad sp create-for-rbac --name "my-terraform-sp" --role Contributor --scopes /subscriptions/<SUBSCRIPTION_ID>
# The JSON output can be stored as AZURE_CREDENTIALS secret in GitHub Actions.
